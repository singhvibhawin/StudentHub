@model ConnectingDatabase.Models.StudentModel

<style>
    .custom-scroll {
        max-height: 250px; /* Adjust height to fit 10 items comfortably */
        overflow-y: auto;
    }
</style>

@{
    var username = ViewBag.Username;
}
      
@if (username == "user")
{
    <div class="card mx-auto d-block mt-4" style="width: 50vw; border-radius: 1rem;">
        <div class="card-body">
            <form method="post" class="container my-4" enctype="multipart/form-data">
                <div class="p-3 mt-3" style="max-height: 600px; overflow-y: auto;">
                    <div class="row pb-2">
                        <h2 class="text-primary text-center">Student Registration Form</h2>
                        <hr />
                        <input asp-for="@Model.student.StudentId" hidden />
                        <div class="col-6 mb-2">
                            <label asp-for="@Model.student.Name" class="p-0"></label>
                            <input asp-for="@Model.student.Name" class="form-control" />
                            <span asp-validation-for="@Model.student.Name" class="text-danger"></span>
                        </div>
                        <div class="col-6 mb-2">
                            <label asp-for="@Model.student.Email" class="p-0"></label>
                            <input asp-for="@Model.student.Email" class="form-control" />
                            <span asp-validation-for="@Model.student.Email" class="text-danger"></span>
                        </div>
                        <div class="col-6 mb-2">
                            <label asp-for="@Model.student.Contact" class="p-0"></label>
                            <input asp-for="@Model.student.Contact" class="form-control" />
                            <span asp-validation-for="@Model.student.Contact" class="text-danger"></span>
                        </div>
                        <div class="col-6 mb-2">
                            <label asp-for="@Model.student.Address" class="p-0"></label>
                            <input asp-for="@Model.student.Address" class="form-control" />
                            <span asp-validation-for="@Model.student.Address" class="text-danger"></span>
                        </div>
                        <div class="col-6 mb-2">
                            <label asp-for="@Model.student.City" class="p-0"></label>
                            <input asp-for="@Model.student.City" class="form-control" />
                            <span asp-validation-for="@Model.student.City" class="text-danger"></span>
                        </div>
                        <div class="col-6 mb-2">
                            <label asp-for="@Model.student.Pincode" class="p-0"></label>
                            <input asp-for="@Model.student.Pincode" class="form-control" />
                            <span asp-validation-for="@Model.student.Pincode" class="text-danger"></span>
                        </div>
                        <div class="col-6 mb-2">
                            <button id="degreeButton" class="btn btn-outline-primary dropdown-toggle form-control" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Select your Degree
                            </button>
                            <ul class="dropdown-menu custom-scroll" id="documentTypeDegree">
                                @foreach (var degree in Model.Degrees)
                                {
                                    <li><a class="dropdown-item" data-doc-type="@degree.Id">@degree.DegreeName</a></li>
                                }
                            </ul>
                            <input asp-for="@Model.student.DegreeId" id="selectedDegreeId" hidden/>
                        </div>
                        <div class="col-6 mb-2">
                            <button id="documentButton" class="btn btn-outline-primary dropdown-toggle form-control" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Select Document Type
                            </button>
                            <ul class="dropdown-menu" id="documentTypeDropdown">
                                <li><a class="dropdown-item" data-doc-type="Aadhar Card">Aadhar Card</a></li>
                                <li><a class="dropdown-item" data-doc-type="Pan Card">Pan Card</a></li>
                                <li><a class="dropdown-item" data-doc-type="10th Marksheet">10th Marksheet</a></li>
                                <li><a class="dropdown-item" data-doc-type="12th Marksheet">12th Marksheet</a></li>
                                <li><a class="dropdown-item" data-doc-type="Resume">Resume</a></li>
                            </ul>
                        </div>
                        <div class="col-8"></div>
                        <div id="selectedDocuments" class="row text-center"></div>
                    </div>
                    <div class="text-center pb-1 my-2">
                        <button type="submit" class="btn btn-primary text-center px-4">Submit</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
}
else
{
    <div class="d-flex justify-content-between align-items-center p-3">
        <h2 class="text-primary text-center">Students Profiles</h2>
        <a class="btn btn-outline-primary" asp-controller="Student" asp-action="UploadExcel">Upload Excel</a>
    </div>

    <div class="conatiner">
        <table id="studentsTable" class="table table-hover table-bordered display">
            <thead>
                <tr class="text-center">
                    <th scope="col">Name</th>
                    <th scope="col">Email</th>
                    <th scope="col">Contact</th>
                    <th scope="col">Address</th>
                    <th scope="col">City</th>
                    <th scope="col">Pincode</th>
                    <th scope="col">Documents</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.students != null)
                {
                    @foreach (var obj in Model.students)
                    {
                        <tr class="text-center" data-id="@obj.StudentId">
                            <td class="editable" data-field="Name">@obj.Name</td>
                            <td class="editable" data-field="Email">@obj.Email</td>
                            <td class="editable" data-field="Contact">@obj.Contact</td>
                            <td class="editable" data-field="Address">@obj.Address</td>
                            <td class="editable" data-field="City">@obj.City</td>
                            <td class="editable" data-field="Pincode">@obj.Pincode</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a class="btn btn-success mx-2" asp-controller="Student" asp-action="Documents" asp-route-id="@obj.UserId">Documents</a>
                                </div>
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <button class="btn btn-warning mx-2 edit-button">Edit</button>
                                    <button class="btn btn-success mx-2 save-button" style="display:none;">Update</button>
                                    <button type="submit" class="btn btn-danger mx-2 delete-button">Delete</button>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <h4 class="text-danger text-center">No students found.</h4>
                }
            </tbody>
        </table>

        <div>
            Page @(ViewBag.CurrentPage) of @(ViewBag.TotalPages)
        </div>
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @if (ViewBag.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)">Previous</a>
                    </li>
                }
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }
                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)">Next</a>
                    </li>
                }
            </ul>
        </nav>

        <div class="text-end mb-3">
            <button id="downloadExcel" class="btn btn-outline-success mx-2">Download Excel</button>
            <button id="downloadPdf" class="btn btn-outline-success mx-2">Download PDF</button>
        </div>
    </div>
}

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

<script>

    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('#documentTypeDegree .dropdown-item').forEach(item => {
            item.addEventListener('click', function() {
                const degreeId = this.getAttribute('data-doc-type');
                document.getElementById('selectedDegreeId').value = degreeId;
                document.getElementById('degreeButton').textContent = this.textContent;
            });
        });
    });

    $(document).ready(function () {
        $('.edit-button').click(function () {
            var row = $(this).closest('tr');
            row.find('.editable').each(function () {
                var text = $(this).text();
                $(this).html('<input class="form-control" value="' + text + '" />');
            });
            row.find('.edit-button').hide();
            row.find('.save-button').show();
        });

        $('.save-button').click(function () {
            var row = $(this).closest('tr');
            var studentId = row.data('id');
            var studentData = { StudentId: studentId };

            row.find('.editable').each(function () {
                var input = $(this).find('input');
                var field = $(this).data('field');
                studentData[field] = input.val();
                $(this).text(input.val());
            });

            $.ajax({
                url: '@Url.Action("Edit", "Student")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(studentData),
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    row.find('.save-button').hide();
                    row.find('.edit-button').show();
                    console.log('Successfully Edited!!');
                },
                error: function (error) {
                    console.error('Error:', error);
                }
            });
        });

        $('.delete-button').click(function () {
            if (confirm("Are you sure you want to delete this student?")) {
                var row = $(this).closest('tr');
                var studentId = row.data('id');

                $.ajax({
                    url: '@Url.Action("DeleteStudent", "Student")/' + studentId,
                    type: 'DELETE',
                    success: function (response) {
                        row.remove();
                        console.log('Successfully Deleted!!');
                    },
                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            }
        });

        $('#downloadExcel').click(function () {
            window.location.href = '@Url.Action("DownloadExcel", "Student")';
        });

        $('#downloadPdf').click(function () {
            window.location.href = '@Url.Action("DownloadPdf", "Student")';
        });
    });

    $(document).ready(function () {
        $('#studentsTable').DataTable({
            "ajax": {
                "url": "@Url.Action("GetData")",
                "type": "GET",
                "datatype": "json"
            },
            "columns": [
                { "data": "Column1" },
                { "data": "Column2" }
                // Define more columns as needed
            ],
            "paging": true,
            "searching": true,
            "ordering": true,
            "info": true
        });
    });

    const selectedDocuments = document.getElementById("selectedDocuments");
    const documentTypeDropdown = document.getElementById("documentTypeDropdown");

    documentTypeDropdown.addEventListener("click", function (event) {
        if (event.target.dataset.docType) {
            const docType = event.target.dataset.docType;
            const existingDocs = Array.from(selectedDocuments.children).map(child => child.dataset.docType);
            if (!existingDocs.includes(docType)) {
                const docRow = document.createElement("div");
                docRow.className = "my-3 d-flex text-center align-items-center col-12";
                docRow.dataset.docType = docType;

                const uploadField = `
                            <label class="form-label col-2">${docType}</label>
                        <input type="file" name="${docType.replace(/ /g, '_')}" class="form-control border border-secondary" required />
                        <button type="button" class="btn btn-success my-2" onclick="uploadDocument(this, '${docType}')">Upload</button>
                            <div class="uploadStatus d-flex text-center align-items-center"></div>
                    `;
                docRow.innerHTML = uploadField;
                selectedDocuments.appendChild(docRow);
            } else {
                alert("Document type already added.");
            }
        }
    });

    const allowedFileTypes = ["image/jpeg", "image/png", "application/pdf", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"];

    function uploadDocument(button, docType) {
        const input = button.previousElementSibling;
        const file = input.files[0];

        // Client-side validation for file type
        if (!allowedFileTypes.includes(file.type)) {
            alert("Invalid file type. Only jpg, jpeg, png, pdf, doc, docx files are allowed.");
            const docRow = document.querySelector(`div[data-doc-type='${docType}']`);
            if (docRow) {
                docRow.remove();
            }
            return;
        }

        const formData = new FormData();
        formData.append("file", input.files[0]);
        formData.append("docType", docType);

        fetch('@Url.Action("UploadDocument","Student")', {  // Replace with your actual upload endpoint
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                button.nextElementSibling.innerHTML = `
                    <p class="text-success mx-4">File Uploaded Successfully! File: ${input.files[0].name}</p>
                    <button type="button" class="btn btn-danger mt-2" onclick="deleteDocument('${docType}', '${data.filePath}')">X</button>
                `;
                input.style.display = "none";
                button.style.display = "none";
            } else {
                button.nextElementSibling.innerText = "Upload Failed! Can't upload file with the same name.";
            }
        })
        .catch(error => {
            button.nextElementSibling.innerText = "Upload Error!";
            console.error('hi');
            console.error(error);
        });
    }

    function deleteDocument(docType, filePath) {
        fetch('@Url.Action("DeleteDocument", "Student")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ docType, filePath })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const docRow = document.querySelector(`div[data-doc-type='${docType}']`);
                    if (docRow) {
                        docRow.remove();
                    }
                } else {
                    alert("Failed to delete the document.");
                }
            })
            .catch(error => {
                console.error('Delete Error:', error);
            });
    }

</script>

@section Scripts {
    @{
            <partial name="_ValidationScriptsPartial" />
    }
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}